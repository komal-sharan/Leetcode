
// Movezeroes
#include<iostream>
using namespace std;
class Solution {
public:
    void moveZeroes(vector<int> &nums) {
     
     int count=nums.size();
     int temp,i;
     while(count>1)
     {
         for(i=0;i<nums.size();i++)
          {
              if(nums[i]==0 && nums[i+1]!=0)
              {
                  temp=nums[i];
                  nums[i]=nums[i+1];
                  nums[i+1]=temp;
              }
          }
         count--;
        
     }
     
     for (int i=0; i<nums.size();i++){
    cout << nums[i] << " ";
  }
        
    }
};

// Maximum subarray problem
class Solution {
public:
    int maxSubArrayLen(vector<int>& nums, int k) {
        int arraysize=nums.size();
        int size=1;
        int sum=0;
        int largestsize=0;
        int count=0;
        
        if(arraysize==1)
        {
            if(nums[0]==k)
            largestsize=1;
        }
        else
        {
          
        while(size<=arraysize)
        {
            
            for(int i=0;i<=arraysize;i++)
            {
               
                for(int j=i;j<size+i && j<arraysize ;j++)
                {
                   
                    sum+=nums[j];
                    count++;
                    
                    
                 }
                
                
                if(sum==k)
                {
                    
                    if(largestsize<count)
                     largestsize=count;
                    
                   
                    
                    
                }
                    
                    sum=0;
                    count=0;
                
            }
            size++;
            
        }
        
            
        }
        
       return largestsize;
        
    }
};
